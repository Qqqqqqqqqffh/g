name: Benchmark Runner

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types: [completed]

jobs:
  run-benchmark:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0

    - name: Install tools
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind

    - name: Compile optimized (save logs)
      run: |
        cmake . > compile_stdout.log 2> compile_stderr.log
        make >> compile_stdout.log 2>> compile_stderr.log

    - name: Run cuda-memcheck
      run: |
        cuda-memcheck ./main > cuda_memcheck.log 2>&1 || true

    - name: Run valgrind check
      run: |
        valgrind --leak-check=full --error-exitcode=1 ./main > valgrind_stdout.log 2> valgrind_stderr.log || true

    - name: Run optimized program (save logs)
      run: |
        ./main > run_stdout.log 2> run_stderr.log

    - name: Save result to database
      run: python3 save_result.py
      env:
        GITHUB_ACTOR: ${{ github.actor }}

    - name: Commit logs and database
      run: |
        git config user.name "github-actions"
        git config user.email "actions@users.noreply.github.com"
        git add results.db compile_stdout.log compile_stderr.log run_stdout.log run_stderr.log cuda_memcheck.log valgrind_stdout.log valgrind_stderr.log
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "üìä Update results and logs for ${{ github.actor }}"
          git push origin main
        else
          echo "No changes to commit"
        fi

    - name: Comment PR if valgrind errors found
      if: always()
      run: |
        if grep -q "ERROR SUMMARY: [^0]*[1-9]" valgrind_stderr.log; then
          gh pr comment ${{ github.event.workflow_run.pull_requests[0].number }} \
            --body "‚ö† Valgrind detected memory issues:\n\`\`\`\n$(cat valgrind_stderr.log)\n\`\`\`"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # –ù–æ–≤—ã–π —à–∞–≥: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞—Ö
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-logs
        path: |
          compile_stdout.log
          compile_stderr.log
          run_stdout.log
          run_stderr.log
          cuda_memcheck.log
          valgrind_stdout.log
          valgrind_stderr.log
